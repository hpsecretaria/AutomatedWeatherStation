<Application x:Class="AutomatedWeatherStation.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:controls="http://metro.mahapps.com/winfx/xaml/controls"
             xmlns:modules="clr-namespace:AutomatedWeatherStation.Modules"
             StartupUri="MainWindow.xaml">
    <Application.Resources>
        <ResourceDictionary>
            <modules:ViewModelLocator x:Key="Locator" />
            <Style x:Key="LabelTitleStyle">
                <Style.Setters>
                    <Setter Property="Label.HorizontalAlignment" Value="Left" />
                    <Setter Property="Label.VerticalAlignment" Value="Center" />
                    <Setter Property="Label.FontWeight" Value="DemiBold" />
                    <Setter Property="Label.Foreground" Value="White" />
                </Style.Setters>
            </Style>
            <Style x:Key="LabelSubTitleStyle">
                <Style.Setters>
                    <Setter Property="Label.HorizontalAlignment" Value="Left" />
                    <Setter Property="Label.VerticalAlignment" Value="Center" />
                    <Setter Property="Label.FontWeight" Value="DemiBold" />
                    <Setter Property="Label.Foreground" Value="Black" />
                </Style.Setters>
            </Style>
            <Style x:Key="LabelStyle">
                <Style.Setters>
                    <Setter Property="Label.HorizontalAlignment" Value="Left" />
                    <Setter Property="Label.VerticalAlignment" Value="Center" />
                    <Setter Property="Label.FontWeight" Value="SemiBold" />
                    <Setter Property="Label.Foreground" Value="Black" />
                </Style.Setters>
            </Style>

            <Style x:Key="TextBlockStyle">
                <Style.Setters>
                    <Setter Property="TextBlock.Margin" Value="5,0,0,0" />
                    <Setter Property="TextBlock.HorizontalAlignment" Value="Left" />
                    <Setter Property="TextBlock.VerticalAlignment" Value="Center" />
                    <Setter Property="TextBlock.Foreground" Value="Black" />
                    <Setter Property="TextBlock.TextWrapping" Value="Wrap" />
                </Style.Setters>
            </Style>


            <Style x:Key="ButtonNavigatorStyle">
                <Style.Setters>
                    <Setter Property="Button.HorizontalAlignment" Value="Stretch" />
                    <Setter Property="Button.Background" Value="Transparent" />
                    <Setter Property="Button.BorderBrush" Value="Transparent" />
                    <Setter Property="Button.Margin" Value="5,0,5,0" />
                </Style.Setters>
            </Style>
            <Style x:Key="ListBoxStyle">
                <Style.Setters>
                    <Setter Property="ListBox.HorizontalAlignment" Value="Stretch" />
                    <Setter Property="ListBox.VerticalAlignment" Value="Stretch" />
                    <Setter Property="ListBox.Background" Value="Transparent" />
                    <Setter Property="ListBox.BorderBrush" Value="Transparent" />
                    <Setter Property="ListBox.Foreground" Value="Black" />
                    <Setter Property="ListBox.Margin" Value="5" />
                </Style.Setters>
            </Style>

            <Style x:Key="MenuLevel3"
                   BasedOn="{StaticResource MetroTabItem}"
                   TargetType="{x:Type TabItem}">
                <Setter Property="controls:ControlsHelper.HeaderFontSize" Value="19" />
                <Setter Property="controls:ControlsHelper.HeaderFontWeight" Value="Medium" />


            </Style>


            <Style x:Key="TabControlDisableStyle"
                   BasedOn="{StaticResource MetroTabItem}"
                   TargetType="{x:Type TabItem}">
                <Style.Triggers>
                    <Trigger Property="controls:BaseMetroTabControl.IsSelected" Value="False">
                        <Setter Property="Foreground" Value="#D4D1D1" />
                        <Setter Property="TextElement.Foreground" Value="#D4D1D1" />
                    </Trigger>
                    <Trigger Property="controls:BaseMetroTabControl.IsSelected" Value="True">
                        <Setter Property="Foreground" Value="White" />
                        <Setter Property="TextElement.Foreground" Value="White" />
                    </Trigger>
                </Style.Triggers>
            </Style>

            <Style x:Key="MetroListBox" TargetType="{x:Type ListBox}">
                <Setter Property="Background" Value="{DynamicResource WhiteBrush}" />
                <Setter Property="BorderBrush" Value="{DynamicResource BlackBrush}" />
                <!--  default to 0  -->
                <Setter Property="BorderThickness" Value="0" />
                <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                <Setter Property="VerticalContentAlignment" Value="Center" />
                <Setter Property="ScrollViewer.CanContentScroll" Value="True" />
                <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
                <Setter Property="ScrollViewer.PanningMode" Value="Both" />
                <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
                <Setter Property="SnapsToDevicePixels" Value="True" />
                <Setter Property="Stylus.IsFlicksEnabled" Value="False" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ListBox}">
                            <Border Name="Border"
                                    Background="{TemplateBinding Background}"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="{TemplateBinding BorderThickness}">
                                <ScrollViewer CanContentScroll="{TemplateBinding ScrollViewer.CanContentScroll}"
                                              Focusable="False"
                                              HorizontalScrollBarVisibility="{TemplateBinding ScrollViewer.HorizontalScrollBarVisibility}"
                                              Padding="{TemplateBinding Padding}"
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                              VerticalScrollBarVisibility="{TemplateBinding ScrollViewer.VerticalScrollBarVisibility}">
                                    <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                </ScrollViewer>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsGrouping" Value="false">
                                    <Setter Property="ScrollViewer.CanContentScroll" Value="false" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Style.Triggers>
                    <Trigger Property="IsEnabled" Value="False">
                        <Setter Property="BorderBrush" Value="{DynamicResource GrayBrush9}" />
                    </Trigger>
                    <Trigger Property="VirtualizingStackPanel.IsVirtualizing" Value="True">
                        <Setter Property="ItemsPanel">
                            <Setter.Value>
                                <ItemsPanelTemplate>
                                    <VirtualizingStackPanel />
                                </ItemsPanelTemplate>
                            </Setter.Value>
                        </Setter>
                        <Setter Property="ScrollViewer.CanContentScroll" Value="True" />
                    </Trigger>
                </Style.Triggers>
            </Style>

            <Style x:Key="MenuLevel2"
                   BasedOn="{StaticResource MetroTabItem}"
                   TargetType="{x:Type TabItem}">
                <Setter Property="controls:ControlsHelper.HeaderFontSize" Value="22" />
                <Setter Property="controls:ControlsHelper.HeaderFontWeight" Value="Medium" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="TabItem">
                            <Border x:Name="Border"
                                    HorizontalAlignment="Stretch"
                                    Background="{TemplateBinding Background}"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                                <Grid HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition x:Name="PART_ContentLeftCol" Width="Auto" />
                                        <ColumnDefinition x:Name="PART_ContentRightCol" Width="Auto" />
                                    </Grid.ColumnDefinitions>
                                    <Grid.RowDefinitions>
                                        <RowDefinition x:Name="PART_ContentTopRow" Height="Auto" />
                                        <RowDefinition x:Name="PART_ContentBottomRow" Height="Auto" />
                                    </Grid.RowDefinitions>
                                    <controls:ContentControlEx x:Name="ContentSite"
                                                               Grid.Row="0"
                                                               Grid.Column="0"
                                                               Content="{TemplateBinding Header}"
                                                               ContentCharacterCasing="{Binding RelativeSource={RelativeSource TemplatedParent},
                                                                                                Path=(controls:ControlsHelper.ContentCharacterCasing)}"
                                                               ContentStringFormat="{TemplateBinding HeaderStringFormat}"
                                                               ContentTemplate="{TemplateBinding HeaderTemplate}"
                                                               ContentTemplateSelector="{TemplateBinding HeaderTemplateSelector}"
                                                               FontFamily="{TemplateBinding FontFamily}"
                                                               FontSize="{TemplateBinding controls:ControlsHelper.HeaderFontSize}"
                                                               FontStretch="{TemplateBinding controls:ControlsHelper.HeaderFontStretch}"
                                                               FontStyle="{TemplateBinding FontStyle}"
                                                               FontWeight="{TemplateBinding controls:ControlsHelper.HeaderFontWeight}"
                                                               Foreground="{TemplateBinding Foreground}"
                                                               Padding="{TemplateBinding Padding}"
                                                               RecognizesAccessKey="True"
                                                               SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                    <Rectangle x:Name="Underline"
                                               Grid.Row="1"
                                               Grid.Column="0"
                                               Width="Auto"
                                               Height="2"
                                               Margin="0 1 0 0"
                                               HorizontalAlignment="Stretch"
                                               Visibility="{Binding RelativeSource={RelativeSource Mode=FindAncestor,
                                                                                                   AncestorType={x:Type TabControl}},
                                                                    Path=(controls:TabControlHelper.IsUnderlined),
                                                                    Converter={StaticResource BooleanToVisibilityConverter}}" />
                                </Grid>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsSelected" Value="true">
                                    <Setter TargetName="ContentSite" Property="TextElement.Foreground" Value="White" />
                                    <Setter TargetName="Underline" Property="Fill"
                                            Value="{DynamicResource AccentColorBrush4}" />
                                </Trigger>
                                <Trigger Property="IsSelected" Value="false">
                                    <Setter TargetName="ContentSite" Property="TextElement.Foreground"
                                            Value="{DynamicResource GrayNormalBrush}" />
                                    <Setter TargetName="Underline" Property="Fill"
                                            Value="{DynamicResource GrayNormalBrush}" />
                                </Trigger>
                                <Trigger SourceName="ContentSite" Property="IsMouseOver" Value="True">
                                    <Setter TargetName="ContentSite" Property="TextElement.Foreground"
                                            Value="{DynamicResource GrayNormalBrush}" />
                                    <Setter TargetName="Underline" Property="Fill"
                                            Value="{DynamicResource GrayNormalBrush}" />
                                </Trigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition SourceName="ContentSite" Property="IsMouseOver" Value="True" />
                                        <Condition Property="IsSelected" Value="True" />
                                    </MultiTrigger.Conditions>
                                    <Setter TargetName="ContentSite" Property="TextElement.Foreground" Value="White" />
                                    <Setter TargetName="Underline" Property="Fill" Value="White" />
                                </MultiTrigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <!--  ACCENT COLORS  -->
            <Color x:Key="HighlightColor">#3E3E3E</Color>

            <!--  80%  -->
            <Color x:Key="AccentColor">#000000</Color>
            <!--  60%  -->
            <Color x:Key="AccentColor2">#858383</Color>
            <!--  40%  -->
            <Color x:Key="AccentColor3">#D4D1D1</Color>
            <!--  20%  -->
            <Color x:Key="AccentColor4">#EEEEEE</Color>

            <SolidColorBrush x:Key="HighlightBrush" Color="{StaticResource HighlightColor}" />
            <SolidColorBrush x:Key="AccentColorBrush" Color="{StaticResource AccentColor}" />
            <SolidColorBrush x:Key="AccentColorBrush2" Color="{StaticResource AccentColor2}" />
            <SolidColorBrush x:Key="AccentColorBrush3" Color="{StaticResource AccentColor3}" />
            <SolidColorBrush x:Key="AccentColorBrush4" Color="{StaticResource AccentColor4}" />

            <SolidColorBrush x:Key="WindowTitleColorBrush" Color="{StaticResource AccentColor}" />

            <LinearGradientBrush x:Key="ProgressBrush" StartPoint="1.002,0.5" EndPoint="0.001,0.5">
                <GradientStop Offset="0" Color="{StaticResource HighlightColor}" />
                <GradientStop Offset="1" Color="{StaticResource AccentColor3}" />
            </LinearGradientBrush>

            <SolidColorBrush x:Key="CheckmarkFill" Color="{StaticResource AccentColor}" />
            <SolidColorBrush x:Key="RightArrowFill" Color="{StaticResource AccentColor}" />

            <Color x:Key="IdealForegroundColor">White</Color>
            <SolidColorBrush x:Key="IdealForegroundColorBrush" Color="{StaticResource IdealForegroundColor}" />
            <SolidColorBrush x:Key="IdealForegroundDisabledBrush"
                             Opacity="0.4"
                             Color="{StaticResource IdealForegroundColor}" />
            <SolidColorBrush x:Key="AccentSelectedColorBrush" Color="{StaticResource IdealForegroundColor}" />

            <SolidColorBrush x:Key="MetroDataGrid.HighlightBrush" Color="{StaticResource AccentColor}" />
            <SolidColorBrush x:Key="MetroDataGrid.HighlightTextBrush" Color="{StaticResource IdealForegroundColor}" />
            <SolidColorBrush x:Key="MetroDataGrid.MouseOverHighlightBrush" Color="{StaticResource AccentColor3}" />
            <SolidColorBrush x:Key="MetroDataGrid.FocusBorderBrush" Color="{StaticResource AccentColor}" />
            <SolidColorBrush x:Key="MetroDataGrid.InactiveSelectionHighlightBrush"
                             Color="{StaticResource AccentColor2}" />
            <SolidColorBrush x:Key="MetroDataGrid.InactiveSelectionHighlightTextBrush"
                             Color="{StaticResource IdealForegroundColor}" />


            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="Converter/Converters.xaml" />
                <ResourceDictionary Source="/Resources/Icons.xaml" />

                <!--
                    MahApps.Metro resource dictionaries. Make sure that all file names are Case
                    `Sensitive!
                -->
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Controls.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Fonts.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Colors.xaml" />
                <!--<ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/VS/colors.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/VS/styles.xaml" />-->

                <!--  Accent and AppTheme setting  -->
                <!--<ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Accents/teal.xaml" />-->
                <ResourceDictionary
                    Source="pack://application:,,,/MahApps.Metro;component/Styles/Accents/BaseLight.xaml" />
                <ResourceDictionary
                    Source="pack://application:,,,/MahApps.Metro;component/Styles/Controls.AnimatedTabControl.xaml" />
                <!--<ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Shared.xaml" />-->
                <ResourceDictionary Source="Template/DataTemplates.xaml" />


            </ResourceDictionary.MergedDictionaries>


        </ResourceDictionary>

    </Application.Resources>
</Application>